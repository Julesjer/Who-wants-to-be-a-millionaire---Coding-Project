#Python Program to play "Who wants to be a millionaire?" with two versions (HSG and Standard)

#Importing openpyxl, random, pandas and numpy
import openpyxl
import random
import pandas as pd
import numpy as np

# Read the HSG Questions and Standard Questions Excel files
HSGQ = pd.read_excel("HSG Questions.xlsx")
StandardQ = pd.read_excel("Standard Questions.xlsx")

# Define price levels for each question
price_levels = [50, 100, 200, 300, 500, 1000, 2000, 4000, 8000, 16000, 32000, 64000, 125000, 500000, 1000000]

# Define response messages for correct and wrong answers
response_list_correct = ["Correct! Good answer.", "What a genius!"]

response_list_false = ["Unfortunately wrong.", "That was close. The answer is wrong."]

# Define a function to get a question based on the selected mode and difficulty level
def get_question(modeQ, difficultyQ):
  
  if modeQ == "HSG":
  # Select a random question from HSGQ with the given difficulty level
    global HSGQ
    aa = HSGQ[(HSGQ["Difficulty"] == difficultyQ)].sample(n=1).iloc[0]

    # Remove the selected question from the HSGQ dataframe
    HSGQ = HSGQ.drop(HSGQ[HSGQ['Question'] == aa[0]].index, inplace = False)
    # Return the question, answers and correct answer as a dictionary
    return {"question": aa[0],"answers": list(aa[1:5]), "correct_answer": aa[5]}
  
  else:
  
    global StandardQ
    # Select a random question from StandardQ with the given difficulty level
    aa = StandardQ[(StandardQ["Difficulty"] == difficultyQ)].sample(n=1).iloc[0]
   # Remove the selected question from the StandardQ dataframe
    StandardQ = StandardQ.drop(StandardQ[StandardQ['Question'] == aa[0]].index, inplace = False)
    # Return the question, answers and correct answer as a dictionary
    return {"question": aa[0],"answers": list(aa[1:5]), "correct_answer": aa[5]}

# Define the main game function
def play_game():
    
    print("Welcome to Who Wants to Be a Millionaire!")
    print("When answering the questions, only enter a, b, c or d!")
    print("When you want to stop playing, enter stop.")
    
    while True:
      try:
        # Get the game mode from the user
        def_mode = input("Are you an HSG Student (Yes / No)?: ")
        if def_mode.lower() == "yes":
            mode = "HSG"
            print("You have chosen the HSG mode. Good luck!")
        elif def_mode.lower() == "no":
            mode = "Standard"
            print("You have chosen the normal mode. Good luck!")
        else:
          raise ValueError
        break
      except ValueError:
        print("Please follow the instructions!")
    
    while True:
      try:
        # Get the security level from the user
        def_sec_level = input("What should your security level be? 500 or 16000?: ")
        if def_sec_level == "500":
            sec_level = "level500"
            print("You have chosen 500 CHF.")
        elif def_sec_level == "16000":
            mode = "level16000"
            print("You have chosen 16000 CHF.")
        else:
          raise ValueError
        break
      except ValueError:
        print("Please follow the instructions!")
# Initialize counter to keep track of the question number.
    counter = 0
  # Run a loop to ask 15 questions.
    while counter < 15:
          # Set the difficulty level based on the value of counter
          if counter < 6:
            difficulty = "Easy"
          elif counter < 11:
            difficulty = "Medium"
          else:
            difficulty = "Hard"
          # Call the get_question() function to get the next question
          question = get_question(mode, difficulty)
          # Print the current prize level
          print(f"With the next question you can secure {price_levels[counter]} CHF.")

      # Print the question and its answers
          print(question["question"])
          for answer in question["answers"]:
            print(answer)
          
          while True:
            try:
              user_answer = input("Answer: ")
              # Check if the user wants to stop playing
              if user_answer in ["a", "b", "c", "d", "stop", "Stop"]:
                break
              else:
                raise ValueError
            except ValueError:
              print("Please follow the instructions!")
              continue
          
          if user_answer.lower() == "stop":
            break
          elif user_answer == question["correct_answer"][0] and counter == 14:
              print(f"Congratulations, you have won 1000000 CHF!!! You are a new millionaire.")
              break
          # Check if the user's answer is correct and it's not the final question
          elif user_answer == question["correct_answer"][0]:
              print(random.choice(response_list_correct))
              print(f"You won {price_levels[counter]} CHF.")
              print(f"You have the chance to go home with {price_levels[counter]} CHF or try the next question.")
              # Loop until the user provides a valid answer
              while True:
                try:
                  user_dec = input("Do you want to go on? (Yes/No): ")
                  
                  # Check if the user's decision is valid
                  if user_dec.lower() in ["yes", "no"]:
                    break
                  else:
                    raise ValueError
                except ValueError:
                  print("Please follow the instructions!")
                  continue
              
              if user_dec.lower() == "yes":
                  counter += 1
                  continue
              else:
                  print(f"Congratulations you have won {price_levels[counter]} CHF.")
          # If the user's answer is incorrect        break
          else:
            # Check if the user has reached a security level and print the appropriate message
              if price_levels[counter] > 16000 and sec_level == "level16000":
                print(random.choice(response_list_false))
                print("You have lost, but reached your security level. So you win 16000 CHF!")
              elif price_levels[counter] > 500 and sec_level == "level500":
                print(random.choice(response_list_false))
                print("You have lost, but reached your security level. So you win 500 CHF!")
              else:
                print(random.choice(response_list_false))
                print("You have lost and did not reach your security level!")
              break
